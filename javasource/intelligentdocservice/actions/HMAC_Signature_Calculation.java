// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package intelligentdocservice.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import java.util.ArrayList;
import java.util.Date;
import java.util.Base64;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.TimeZone;

public class HMAC_Signature_Calculation extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __HMACDetails;
	private intelligentdocservice.proxies.HMACDetails HMACDetails;
	private java.lang.String UserName;
	private java.lang.String Password;

	public HMAC_Signature_Calculation(IContext context, IMendixObject HMACDetails, java.lang.String UserName, java.lang.String Password)
	{
		super(context);
		this.__HMACDetails = HMACDetails;
		this.UserName = UserName;
		this.Password = Password;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.HMACDetails = this.__HMACDetails == null ? null : intelligentdocservice.proxies.HMACDetails.initialize(getContext(), __HMACDetails);

		// BEGIN USER CODE
		ArrayList<String> signDetails = getSignature(this.UserName,this.Password);
		this.HMACDetails.getMendixObject().setValue(getContext(),"Date",signDetails.get(0));
		this.HMACDetails.getMendixObject().setValue(getContext(),"AuthHeader",signDetails.get(1));
		return this.HMACDetails.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "HMAC_Signature_Calculation";
	}

	// BEGIN EXTRA CODE

	private static String hmacHash(String key, String data) throws Exception 
	{
		String algorithm = "HmacSHA256";
        SecretKeySpec signingKey = new SecretKeySpec(key.getBytes(), algorithm);
        Mac mac = Mac.getInstance(algorithm);
        mac.init(signingKey);
        return Base64.getEncoder().encodeToString(mac.doFinal(data.getBytes()));
    }
	
	public static ArrayList<String> getSignature(String username, String password) throws Exception {
       DateFormat df = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss");
       df.setTimeZone(TimeZone.getTimeZone("GMT"));
       String date = df.format(new Date()) + " GMT";
       
	   String rawSign = "Date: " + date;
       String authHeader = String.format(
               "hmac username=\"%s\", algorithm=\"hmac-sha256\", headers=\"Date\", signature=\"%s\"",
        username, hmacHash(password, rawSign));

        ArrayList<String> signature = new ArrayList<String>();
        signature.add(date);
        signature.add(authHeader);
        return signature;

	}

	// END EXTRA CODE
}
